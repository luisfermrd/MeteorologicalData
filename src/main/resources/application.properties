#Conexion a MySQL
spring.datasource.url=jdbc:mysql://localhost/meteorologicalDataDb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrival=true&useLegacyDateTimeCode=false
spring.datasource.username=root
spring.datasource.password=1234567890
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# mostrar sentencias SQL en la consola
spring.jpa.show-sql= true
# actualizar base de datos y crear entidades
#spring.jpa.hibernate.ddl-auto=update


#Security
security.jwt.secret-key=ZnJhc2Ugc2VjcmV0YSAxMjM0NTY3ODkwMDk4NzY1NDMyMSBvamFsYSB5IHBhc2UgbGEgcHJ1ZWJh
security.jwt.expiration-minutes=30

#doc-api
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

#api
openweather.meteorologial-data.base-url=https://api.openweathermap.org/data/2.5/
openweather.geolocation.base-url=http://api.openweathermap.org/geo/1.0/
openweather.api-id=d69d1a962e8edc3c71d222eb5704d3e0